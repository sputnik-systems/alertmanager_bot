# Default values for alertmanager-bot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/sputnik-systems/alertmanager_bot
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  enabled: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

bot:
  token: ""
  publicURL: ""

alertmanager:
  url: http://alertmanager:9093
  destSecretName: vmalertmanager-default
  configOverride: |+
    global:
      resolve_timeout: 5m
    
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      
    receivers:
    - name: 'web.hook'
    
    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']

templates: {}
#   default.tmpl: |+
#     {{ define "telegram.default" }}
#     {{ range .Alerts }}
#     <b>status:</b> {{ if eq .Status "firing" }}ðŸ”¥ <b>{{ .Status | toUpper }}</b> ðŸ”¥{{ else }}<b>{{ .Status | toUpper }}</b>{{ end }} | ðŸ“ˆ <a href="{{ .GeneratorURL }}">Graph</a>
#     <b>severity:</b> {{ .Labels.severity }}
#     <b>summary:</b> {{ .Annotations.summary }}
#     <b>description:</b> {{ .Annotations.description }}
#     <b>labels:</b> {{ range $key, $value := .Labels }}
#     {{- if ne $key "severity" }}
#         â€¢ <b>{{ $key }}</b>: {{ $value -}}
#     {{- end -}}
#     {{ end }}
#     {{ end }}
#     {{ end }}
